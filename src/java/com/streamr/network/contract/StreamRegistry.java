package com.streamr.network.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.8.9.
 */
@SuppressWarnings("rawtypes")
public class StreamRegistry extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_MAX_INT = "MAX_INT";

    public static final String FUNC_TRUSTED_ROLE = "TRUSTED_ROLE";

    public static final String FUNC__TRUSTEDFORWARDER = "_trustedForwarder";

    public static final String FUNC_ADDRESSTOSTRING = "addressToString";

    public static final String FUNC_CREATESTREAM = "createStream";

    public static final String FUNC_CREATESTREAMWITHENS = "createStreamWithENS";

    public static final String FUNC_DELETESTREAM = "deleteStream";

    public static final String FUNC_EXISTS = "exists";

    public static final String FUNC_GETADDRESSKEY = "getAddressKey";

    public static final String FUNC_GETDIRECTPERMISSIONSFORUSER = "getDirectPermissionsForUser";

    public static final String FUNC_GETPERMISSIONSFORUSER = "getPermissionsForUser";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GETSTREAMMETADATA = "getStreamMetadata";

    public static final String FUNC_GRANTPERMISSION = "grantPermission";

    public static final String FUNC_GRANTPUBLICPERMISSION = "grantPublicPermission";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASDIRECTPERMISSION = "hasDirectPermission";

    public static final String FUNC_HASPERMISSION = "hasPermission";

    public static final String FUNC_HASPUBLICPERMISSION = "hasPublicPermission";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_ISTRUSTEDFORWARDER = "isTrustedForwarder";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEALLPERMISSIONSFORUSER = "revokeAllPermissionsForUser";

    public static final String FUNC_REVOKEPERMISSION = "revokePermission";

    public static final String FUNC_REVOKEPUBLICPERMISSION = "revokePublicPermission";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETEXPIRATIONTIME = "setExpirationTime";

    public static final String FUNC_SETPERMISSIONS = "setPermissions";

    public static final String FUNC_SETPERMISSIONSFORUSER = "setPermissionsForUser";

    public static final String FUNC_SETPUBLICPERMISSION = "setPublicPermission";

    public static final String FUNC_STREAMIDTOMETADATA = "streamIdToMetadata";

    public static final String FUNC_STREAMIDTOPERMISSIONS = "streamIdToPermissions";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TRANSFERALLPERMISSIONSTOUSER = "transferAllPermissionsToUser";

    public static final String FUNC_TRANSFERPERMISSIONTOUSER = "transferPermissionToUser";

    public static final String FUNC_TRUSTEDSETPERMISSIONSFORUSER = "trustedSetPermissionsForUser";

    public static final String FUNC_TRUSTEDSETSTREAMMETADATA = "trustedSetStreamMetadata";

    public static final String FUNC_TRUSTEDSETSTREAMWITHPERMISSION = "trustedSetStreamWithPermission";

    public static final String FUNC_TRUSTEDSETSTREAMS = "trustedSetStreams";

    public static final String FUNC_UPDATESTREAMMETADATA = "updateStreamMetadata";

    public static final Event PERMISSIONUPDATED_EVENT = new Event("PermissionUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Bool>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event STREAMCREATED_EVENT = new Event("StreamCreated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event STREAMDELETED_EVENT = new Event("StreamDeleted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
    ;

    public static final Event STREAMUPDATED_EVENT = new Event("StreamUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected StreamRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected StreamRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected StreamRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected StreamRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<PermissionUpdatedEventResponse> getPermissionUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PERMISSIONUPDATED_EVENT, transactionReceipt);
        ArrayList<PermissionUpdatedEventResponse> responses = new ArrayList<PermissionUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PermissionUpdatedEventResponse typedResponse = new PermissionUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.streamId = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.user = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse.canEdit = (Boolean) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse.canDelete = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse.publishExpiration = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse.subscribeExpiration = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse.canGrant = (Boolean) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PermissionUpdatedEventResponse> permissionUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PermissionUpdatedEventResponse>() {
            @Override
            public PermissionUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PERMISSIONUPDATED_EVENT, log);
                PermissionUpdatedEventResponse typedResponse = new PermissionUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.streamId = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.user = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse.canEdit = (Boolean) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse.canDelete = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse.publishExpiration = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse.subscribeExpiration = (BigInteger) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse.canGrant = (Boolean) eventValues.getNonIndexedValues().get(6).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PermissionUpdatedEventResponse> permissionUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PERMISSIONUPDATED_EVENT));
        return permissionUpdatedEventFlowable(filter);
    }

    public List<RoleAdminChangedEventResponse> getRoleAdminChangedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, transactionReceipt);
        ArrayList<RoleAdminChangedEventResponse> responses = new ArrayList<RoleAdminChangedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleAdminChangedEventResponse>() {
            @Override
            public RoleAdminChangedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
                RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public List<RoleGrantedEventResponse> getRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<RoleGrantedEventResponse> responses = new ArrayList<RoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleGrantedEventResponse>() {
            @Override
            public RoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEGRANTED_EVENT, log);
                RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public List<RoleRevokedEventResponse> getRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<RoleRevokedEventResponse> responses = new ArrayList<RoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, RoleRevokedEventResponse>() {
            @Override
            public RoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ROLEREVOKED_EVENT, log);
                RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public List<StreamCreatedEventResponse> getStreamCreatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STREAMCREATED_EVENT, transactionReceipt);
        ArrayList<StreamCreatedEventResponse> responses = new ArrayList<StreamCreatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StreamCreatedEventResponse typedResponse = new StreamCreatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.metadata = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StreamCreatedEventResponse> streamCreatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, StreamCreatedEventResponse>() {
            @Override
            public StreamCreatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STREAMCREATED_EVENT, log);
                StreamCreatedEventResponse typedResponse = new StreamCreatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.metadata = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StreamCreatedEventResponse> streamCreatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STREAMCREATED_EVENT));
        return streamCreatedEventFlowable(filter);
    }

    public List<StreamDeletedEventResponse> getStreamDeletedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STREAMDELETED_EVENT, transactionReceipt);
        ArrayList<StreamDeletedEventResponse> responses = new ArrayList<StreamDeletedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StreamDeletedEventResponse typedResponse = new StreamDeletedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StreamDeletedEventResponse> streamDeletedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, StreamDeletedEventResponse>() {
            @Override
            public StreamDeletedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STREAMDELETED_EVENT, log);
                StreamDeletedEventResponse typedResponse = new StreamDeletedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StreamDeletedEventResponse> streamDeletedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STREAMDELETED_EVENT));
        return streamDeletedEventFlowable(filter);
    }

    public List<StreamUpdatedEventResponse> getStreamUpdatedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(STREAMUPDATED_EVENT, transactionReceipt);
        ArrayList<StreamUpdatedEventResponse> responses = new ArrayList<StreamUpdatedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            StreamUpdatedEventResponse typedResponse = new StreamUpdatedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.metadata = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<StreamUpdatedEventResponse> streamUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, StreamUpdatedEventResponse>() {
            @Override
            public StreamUpdatedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(STREAMUPDATED_EVENT, log);
                StreamUpdatedEventResponse typedResponse = new StreamUpdatedEventResponse();
                typedResponse.log = log;
                typedResponse.id = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.metadata = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<StreamUpdatedEventResponse> streamUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STREAMUPDATED_EVENT));
        return streamUpdatedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<BigInteger> MAX_INT() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAX_INT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<byte[]> TRUSTED_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TRUSTED_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> _trustedForwarder() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC__TRUSTEDFORWARDER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> addressToString(String _address) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDRESSTOSTRING, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> createStream(String streamIdPath, String metadataJsonString) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATESTREAM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamIdPath), 
                new org.web3j.abi.datatypes.Utf8String(metadataJsonString)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> createStreamWithENS(String ensName, String streamIdPath, String metadataJsonString) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CREATESTREAMWITHENS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(ensName), 
                new org.web3j.abi.datatypes.Utf8String(streamIdPath), 
                new org.web3j.abi.datatypes.Utf8String(metadataJsonString)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> deleteStream(String streamId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DELETESTREAM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> exists(String streamId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_EXISTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<byte[]> getAddressKey(String streamId, String user) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETADDRESSKEY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<Permission> getDirectPermissionsForUser(String streamId, String user) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETDIRECTPERMISSIONSFORUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Permission>() {}));
        return executeRemoteCallSingleValueReturn(function, Permission.class);
    }

    public RemoteFunctionCall<Permission> getPermissionsForUser(String streamId, String user) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPERMISSIONSFORUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Permission>() {}));
        return executeRemoteCallSingleValueReturn(function, Permission.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<String> getStreamMetadata(String streamId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETSTREAMMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantPermission(String streamId, String user, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantPublicPermission(String streamId, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTPUBLICPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasDirectPermission(String streamId, String user, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASDIRECTPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasPermission(String streamId, String user, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasPublicPermission(String streamId, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASPUBLICPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isTrustedForwarder(String forwarder) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISTRUSTEDFORWARDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, forwarder)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeAllPermissionsForUser(String streamId, String user) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEALLPERMISSIONSFORUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokePermission(String streamId, String user, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokePublicPermission(String streamId, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEPUBLICPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setExpirationTime(String streamId, String user, BigInteger permissionType, BigInteger expirationTime) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETEXPIRATIONTIME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType), 
                new org.web3j.abi.datatypes.generated.Uint256(expirationTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPermissions(String streamId, List<String> users, List<Permission> permissions) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPERMISSIONS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(users, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<Permission>(Permission.class, permissions)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPermissionsForUser(String streamId, String user, Boolean canEdit, Boolean deletePerm, BigInteger publishExpiration, BigInteger subscribeExpiration, Boolean canGrant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPERMISSIONSFORUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.Bool(canEdit), 
                new org.web3j.abi.datatypes.Bool(deletePerm), 
                new org.web3j.abi.datatypes.generated.Uint256(publishExpiration), 
                new org.web3j.abi.datatypes.generated.Uint256(subscribeExpiration), 
                new org.web3j.abi.datatypes.Bool(canGrant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPublicPermission(String streamId, BigInteger publishExpiration, BigInteger subscribeExpiration) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPUBLICPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.generated.Uint256(publishExpiration), 
                new org.web3j.abi.datatypes.generated.Uint256(subscribeExpiration)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> streamIdToMetadata(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_STREAMIDTOMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple5<Boolean, Boolean, BigInteger, BigInteger, Boolean>> streamIdToPermissions(String param0, byte[] param1) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_STREAMIDTOPERMISSIONS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0), 
                new org.web3j.abi.datatypes.generated.Bytes32(param1)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
        return new RemoteFunctionCall<Tuple5<Boolean, Boolean, BigInteger, BigInteger, Boolean>>(function,
                new Callable<Tuple5<Boolean, Boolean, BigInteger, BigInteger, Boolean>>() {
                    @Override
                    public Tuple5<Boolean, Boolean, BigInteger, BigInteger, Boolean> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Boolean, Boolean, BigInteger, BigInteger, Boolean>(
                                (Boolean) results.get(0).getValue(), 
                                (Boolean) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (Boolean) results.get(4).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transferAllPermissionsToUser(String streamId, String recipient) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERALLPERMISSIONSTOUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, recipient)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferPermissionToUser(String streamId, String recipient, BigInteger permissionType) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFERPERMISSIONTOUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, recipient), 
                new org.web3j.abi.datatypes.generated.Uint8(permissionType)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> trustedSetPermissionsForUser(String streamId, String user, Boolean canEdit, Boolean deletePerm, BigInteger publishExpiration, BigInteger subscribeExpiration, Boolean canGrant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRUSTEDSETPERMISSIONSFORUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.Bool(canEdit), 
                new org.web3j.abi.datatypes.Bool(deletePerm), 
                new org.web3j.abi.datatypes.generated.Uint256(publishExpiration), 
                new org.web3j.abi.datatypes.generated.Uint256(subscribeExpiration), 
                new org.web3j.abi.datatypes.Bool(canGrant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> trustedSetStreamMetadata(String streamId, String metadata) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRUSTEDSETSTREAMMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Utf8String(metadata)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> trustedSetStreamWithPermission(String streamId, String metadata, String user, Boolean canEdit, Boolean deletePerm, BigInteger publishExpiration, BigInteger subscribeExpiration, Boolean canGrant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRUSTEDSETSTREAMWITHPERMISSION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Utf8String(metadata), 
                new org.web3j.abi.datatypes.Address(160, user), 
                new org.web3j.abi.datatypes.Bool(canEdit), 
                new org.web3j.abi.datatypes.Bool(deletePerm), 
                new org.web3j.abi.datatypes.generated.Uint256(publishExpiration), 
                new org.web3j.abi.datatypes.generated.Uint256(subscribeExpiration), 
                new org.web3j.abi.datatypes.Bool(canGrant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> trustedSetStreams(List<String> streamids, List<String> users, List<String> metadatas, List<Permission> permissions) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRUSTEDSETSTREAMS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(streamids, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Address>(
                        org.web3j.abi.datatypes.Address.class,
                        org.web3j.abi.Utils.typeMap(users, org.web3j.abi.datatypes.Address.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(metadatas, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<Permission>(Permission.class, permissions)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> updateStreamMetadata(String streamId, String metadata) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_UPDATESTREAMMETADATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(streamId), 
                new org.web3j.abi.datatypes.Utf8String(metadata)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static StreamRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new StreamRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static StreamRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new StreamRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static StreamRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new StreamRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static StreamRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new StreamRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<StreamRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String ensCacheAddr, String trustedForwarderAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, ensCacheAddr), 
                new org.web3j.abi.datatypes.Address(160, trustedForwarderAddress)));
        return deployRemoteCall(StreamRegistry.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<StreamRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String ensCacheAddr, String trustedForwarderAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, ensCacheAddr), 
                new org.web3j.abi.datatypes.Address(160, trustedForwarderAddress)));
        return deployRemoteCall(StreamRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<StreamRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String ensCacheAddr, String trustedForwarderAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, ensCacheAddr), 
                new org.web3j.abi.datatypes.Address(160, trustedForwarderAddress)));
        return deployRemoteCall(StreamRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<StreamRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String ensCacheAddr, String trustedForwarderAddress) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, ensCacheAddr), 
                new org.web3j.abi.datatypes.Address(160, trustedForwarderAddress)));
        return deployRemoteCall(StreamRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class Permission extends StaticStruct {
        public Boolean canEdit;

        public Boolean canDelete;

        public BigInteger publishExpiration;

        public BigInteger subscribeExpiration;

        public Boolean canGrant;

        public Permission(Boolean canEdit, Boolean canDelete, BigInteger publishExpiration, BigInteger subscribeExpiration, Boolean canGrant) {
            super(new org.web3j.abi.datatypes.Bool(canEdit),new org.web3j.abi.datatypes.Bool(canDelete),new org.web3j.abi.datatypes.generated.Uint256(publishExpiration),new org.web3j.abi.datatypes.generated.Uint256(subscribeExpiration),new org.web3j.abi.datatypes.Bool(canGrant));
            this.canEdit = canEdit;
            this.canDelete = canDelete;
            this.publishExpiration = publishExpiration;
            this.subscribeExpiration = subscribeExpiration;
            this.canGrant = canGrant;
        }

        public Permission(Bool canEdit, Bool canDelete, Uint256 publishExpiration, Uint256 subscribeExpiration, Bool canGrant) {
            super(canEdit,canDelete,publishExpiration,subscribeExpiration,canGrant);
            this.canEdit = canEdit.getValue();
            this.canDelete = canDelete.getValue();
            this.publishExpiration = publishExpiration.getValue();
            this.subscribeExpiration = subscribeExpiration.getValue();
            this.canGrant = canGrant.getValue();
        }
    }

    public static class PermissionUpdatedEventResponse extends BaseEventResponse {
        public String streamId;

        public String user;

        public Boolean canEdit;

        public Boolean canDelete;

        public BigInteger publishExpiration;

        public BigInteger subscribeExpiration;

        public Boolean canGrant;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class StreamCreatedEventResponse extends BaseEventResponse {
        public String id;

        public String metadata;
    }

    public static class StreamDeletedEventResponse extends BaseEventResponse {
        public String id;
    }

    public static class StreamUpdatedEventResponse extends BaseEventResponse {
        public String id;

        public String metadata;
    }
}
